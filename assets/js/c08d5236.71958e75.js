"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[6432],{82481:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=n(87462),o=(n(67294),n(3905));const i={title:"Setup & Config",sidebar_position:2},r="Setup & Config",a={unversionedId:"cosmovisor/setup-config",id:"cosmovisor/setup-config",title:"Setup & Config",description:"Installation",source:"@site/docs/validator-setup/cosmovisor/setup-config.md",sourceDirName:"cosmovisor",slug:"/cosmovisor/setup-config",permalink:"/validator-setup/cosmovisor/setup-config",draft:!1,editUrl:"https://github.com/sentinel-official/docs/tree/main/docs/validator-setup/cosmovisor/setup-config.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Setup & Config",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/validator-setup/cosmovisor/overview"},next:{title:"Chain Upgrade",permalink:"/validator-setup/cosmovisor/chain-upgrade"}},l={},c=[{value:"Installation",id:"installation",level:2},{value:"Environment Setup",id:"environment-setup",level:2},{value:"Set Up Cosmovisor Service",id:"set-up-cosmovisor-service",level:2},{value:"Start Cosmovisor Service",id:"start-cosmovisor-service",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,s.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setup--config"},"Setup & Config"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Install Cosmovisor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@latest\n")),(0,o.kt)("p",null,"(You may also refer to the Cosmovisor ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/tree/main/tools/cosmovisor#installation"},"installation instructions"),")"),(0,o.kt)("h2",{id:"environment-setup"},"Environment Setup"),(0,o.kt)("p",null,"Create the required directories inside your ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.sentinelhub")," folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/.sentinelhub/cosmovisor\nmkdir -p ~/.sentinelhub/cosmovisor/genesis\nmkdir -p ~/.sentinelhub/cosmovisor/genesis/bin\nmkdir -p ~/.sentinelhub/cosmovisor/upgrades\n")),(0,o.kt)("p",null,"Set the environment variables based on your shell type (can be ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.profile")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.bashrc"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'echo "# Setup Cosmovisor" >> ~/.bashrc\necho "export DAEMON_NAME=sentinelhub" >> ~/.bashrc\necho "export DAEMON_HOME=$HOME/.sentinelhub" >> ~/.bashrc\necho "export DAEMON_ALLOW_DOWNLOAD_BINARIES=false" >> ~/.bashrc\necho "export DAEMON_LOG_BUFFER_SIZE=512" >> ~/.bashrc\necho "export DAEMON_RESTART_AFTER_UPGRADE=true" >> ~/.bashrc\necho "export UNSAFE_SKIP_BACKUP=true" >> ~/.bashrc\nsource ~/.bashrc\n')),(0,o.kt)("p",null,"You may leave out ",(0,o.kt)("inlineCode",{parentName:"p"},"UNSAFE_SKIP_BACKUP=true"),", however the backup takes a decent amount of time and public snapshots of old states are available."),(0,o.kt)("p",null,"Copy the current ",(0,o.kt)("inlineCode",{parentName:"p"},"sentinelhub")," binary into the ",(0,o.kt)("inlineCode",{parentName:"p"},"cosmovisor/genesis")," folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp $GOPATH/bin/sentinelhub ~/.sentinelhub/cosmovisor/genesis/bin\n")),(0,o.kt)("p",null,"Now check the cosmovisor version"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmovisor version\n")),(0,o.kt)("p",null,"You will get something like that:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cosmovisor version: v1.5.0\n11:03AM INF running app args=["version"] module=cosmovisor path=/home/sentinel/.sentinelhub/cosmovisor/genesis/bin/sentinelhub\n0.10.1\n')),(0,o.kt)("p",null,"To check your work, check sentinelhub version to confirm it matches with cosmovisor version"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sentinelhub version\n")),(0,o.kt)("p",null,"If you get ",(0,o.kt)("inlineCode",{parentName:"p"},"0.10.1")," (which is the current version at the time of writing) everything went fine"),(0,o.kt)("h2",{id:"set-up-cosmovisor-service"},"Set Up Cosmovisor Service"),(0,o.kt)("p",null,"Set up a service to allow Cosmovisor to run in the background as well as restart automatically if it runs into any problems:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano cosmovisor.service\n")),(0,o.kt)("p",null,"Add the following block:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=cosmovisor.service",title:"cosmovisor.service"},'[Unit]\nDescription=Cosmovisor Daemon\nAfter=network-online.target\n[Service]\nEnvironment="DAEMON_NAME=sentinelhub"\nEnvironment="DAEMON_HOME=/home/your-user/.sentinelhub"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=false"\nEnvironment="DAEMON_LOG_BUFFER_SIZE=512"\nEnvironment="UNSAFE_SKIP_BACKUP=true"\nUser=your-user\nExecStart=/home/your-user/go/bin/cosmovisor run start\nRestart=always\nRestartSec=3\nLimitNOFILE=infinity\nLimitNPROC=infinity\n[Install]\nWantedBy=multi-user.target\n')),(0,o.kt)("h2",{id:"start-cosmovisor-service"},"Start Cosmovisor Service"),(0,o.kt)("p",null,"Reload the daemon, stop ",(0,o.kt)("inlineCode",{parentName:"p"},"sentinelhub.service"),", enable and start ",(0,o.kt)("inlineCode",{parentName:"p"},"cosmovisor.service"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl stop sentinelhub.service\nsudo systemctl enable cosmovisor.service\nsudo systemctl start cosmovisor.service\n")),(0,o.kt)("p",null,"Check the status of the service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status cosmovisor.service\n")),(0,o.kt)("p",null,"To see live logs of the service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl -u cosmovisor.service -f\n")),(0,o.kt)("p",null,"If everything went fine you can either disable or remove ",(0,o.kt)("inlineCode",{parentName:"p"},"sentinelhub.service")," as you do not need it anymore"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl disable sentinelhub.service\nsudo rm -f sentinelhub.service\n")))}m.isMDXComponent=!0}}]);