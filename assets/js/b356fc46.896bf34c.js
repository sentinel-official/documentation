"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[4599],{29785:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=i(85893),t=i(11151);const r={title:"Contributing",sidebar_position:6},s="Contributing",l={id:"contributing",title:"Contributing",description:"The following information provides a set of guidelines for contributing to the Sentinel CLI dev repo. Use your best judgment, and, if you see room for improvement, please propose changes to this document.",source:"@site/docs/sentinel-cli/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/sentinel-cli/contributing",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Contributing",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Multisig",permalink:"/sentinel-cli/keys/multisig"}},a={},c=[{value:"Proposing changes",id:"proposing-changes",level:2}];function h(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"contributing",children:"Contributing"}),"\n",(0,o.jsx)(n.p,{children:"The following information provides a set of guidelines for contributing to the Sentinel CLI dev repo. Use your best judgment, and, if you see room for improvement, please propose changes to this document."}),"\n",(0,o.jsx)(n.p,{children:"Contributions come in the form of writing documentation, raising issues / PRs, and any other actions that help develop the Sentinel protocol documentation."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Please note that the most recent version, ",(0,o.jsx)(n.strong,{children:"0.3.1"}),", was released by freQnik of MathNodes and will soon be integrated into the Sentinel repository."]})}),"\n",(0,o.jsx)(n.h2,{id:"proposing-changes",children:"Proposing changes"}),"\n",(0,o.jsx)(n.p,{children:"To contribute a change proposal, use the following workflow:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/freQniK/cli-client",children:"Fork the repository"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/syncing-a-fork",children:"Add an upstream"})," so that you can update your fork."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Clone your fork to your computer."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Create a branch and name it appropriately."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Work on only one major change in one pull request."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Make sure all tests are passing locally."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Next, rinse and repeat the following:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Commit your changes. Write a simple, straightforward commit message. To learn more, see ",(0,o.jsx)(n.a,{href:"https://chris.beams.io/posts/git-commit/",children:"How to Write a Git Commit Message"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Push your changes to your remote fork."}),"\n",(0,o.jsx)(n.li,{children:"Create a PR on the Sentinel repository. There should be a PR template to help you do so."}),"\n",(0,o.jsx)(n.li,{children:"Wait for your changes to be reviewed. If you are a maintainer, you can assign your PR to one or more reviewers. If you aren't a maintainer, one of the maintainers will assign a reviewer."}),"\n",(0,o.jsx)(n.li,{children:"After you receive feedback from a reviewer, make the requested changes, commit them to your branch, and push them to your remote fork again."}),"\n",(0,o.jsx)(n.li,{children:"Once approval is given, feel free to squash & merge!"}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);