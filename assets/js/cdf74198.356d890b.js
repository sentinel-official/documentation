"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[7886],{59398:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const r={title:"Prometheus",sidebar_position:3},s="Prometheus",l={unversionedId:"monitoring/prometheus",id:"monitoring/prometheus",title:"Prometheus",description:"Prometheus is a monitoring application that must be installed on a separate monitoring machine",source:"@site/docs/validator-setup/monitoring/prometheus.md",sourceDirName:"monitoring",slug:"/monitoring/prometheus",permalink:"/validator-setup/monitoring/prometheus",draft:!1,editUrl:"https://github.com/sentinel-official/docs/tree/main/docs/validator-setup/monitoring/prometheus.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Prometheus",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Node Exporter",permalink:"/validator-setup/monitoring/node-exporter"},next:{title:"Grafana",permalink:"/validator-setup/monitoring/grafana"}},i={},p=[{value:"Download &amp; Installation",id:"download--installation",level:2},{value:"Edit the config file",id:"edit-the-config-file",level:2},{value:"Create the web authentication file",id:"create-the-web-authentication-file",level:2},{value:"Create the gen-pass file",id:"create-the-gen-pass-file",level:3},{value:"Create the file web.yml",id:"create-the-file-webyml",level:3},{value:"Add a system unit file",id:"add-a-system-unit-file",level:2},{value:"Start Node Exporter service",id:"start-node-exporter-service",level:2},{value:"Node Exporter on Monitoring machine",id:"node-exporter-on-monitoring-machine",level:3}],u={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"prometheus"},"Prometheus"),(0,o.kt)("p",null,"Prometheus is a monitoring application that must be installed on a separate monitoring machine"),(0,o.kt)("h2",{id:"download--installation"},"Download & Installation"),(0,o.kt)("p",null,"On your monitoring machine, download and unpack Prometheus (check the last version ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/download/#prometheus"},"here"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/prometheus/prometheus/releases/download/v2.42.0/prometheus-2.42.0.linux-amd64.tar.gz\ntar xvfz prometheus-2.42.0.linux-amd64.tar.gz\n")),(0,o.kt)("p",null,"Rename the folder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mv prometheus-2.42.0.linux-amd64 prometheus\n")),(0,o.kt)("h2",{id:"edit-the-config-file"},"Edit the config file"),(0,o.kt)("p",null,"Open the config file .yml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /home/user/prometheus/prometheus.yml\n")),(0,o.kt)("p",null,"Add your Validator machine and your local machine as well to the list of scrape targets in the configuration file to enable Prometheus to collect metrics from them"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=/home/user/prometheus/prometheus.yml",title:"/home/user/prometheus/prometheus.yml"},'scrape_configs:\n  # Monitoring Node with prometheus installed\n  - job_name: "monitor-hardware-metrics"\n\u200b\n    # current machine ip and port\n    static_configs:\n      - targets: ["localhost:9100"]\n\u200b\n  # Validator Host Hardware Metrics\n  - job_name: "validator-hardware-metrics"\n\u200b\n    # validator ip and port\n    static_configs:\n      - targets: ["validator_ip:9100"]\n\u200b\n # Validator Internal Metrics\n  - job_name: "validator-internal-metrics"\n\u200b\n    # validator ip and port\n    static_configs:\n      - targets: ["validator_ip:26660"]\n')),(0,o.kt)("h2",{id:"create-the-web-authentication-file"},"Create the web authentication file"),(0,o.kt)("p",null,"First we need to have bcrypt tools installed (can be on any device) to generate a hash of your login password."),(0,o.kt)("h3",{id:"create-the-gen-pass-file"},"Create the gen-pass file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano gen-pass.py\n")),(0,o.kt)("p",null,"Paste the following text"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title gen-pass-py",title:!0,"gen-pass-py":!0},'import getpass\nimport bcrypt\n\u200b\npassword = getpass.getpass("password: ")\nhashed_password = bcrypt.hashpw(password.encode("utf-8"), bcrypt.gensalt())\nprint(hashed_password.decode())\n')),(0,o.kt)("p",null,"Save the file and execute the pythin script"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python3 gen-pass.py\n")),(0,o.kt)("p",null,"You will be prompted for a password. Please enter it, and you will be provided with the encrypted password that you need to copy. Please see the example below"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"password: test\n$2b$12$hNf2lSsxfm0.i4a.1kVpSOVyBCfIB51VRjgBUyv6kdnyTlgWj81Ay\n")),(0,o.kt)("h3",{id:"create-the-file-webyml"},"Create the file web.yml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /home/user/prometheus/web.yml\n")),(0,o.kt)("p",null,"Add your authentication to access Prometheus metrics. Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"<password>")," with the encrypted password you got from your ",(0,o.kt)("inlineCode",{parentName:"p"},"gen-pass.py")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=/home/user/prometheus/web.yml",title:"/home/user/prometheus/web.yml"},"basic_auth_users:\n    admin: <password>\n")),(0,o.kt)("p",null,"(optional) You can now validate the file web.yml with this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"promtool check web-config web.yml\n")),(0,o.kt)("p",null,"You should get the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"web.yml SUCCESS\n")),(0,o.kt)("h2",{id:"add-a-system-unit-file"},"Add a system unit file"),(0,o.kt)("p",null,"Open the .service with a text editor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/prometheus.service\n")),(0,o.kt)("p",null,"Paste the below text"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=/etc/systemd/system/prometheus.service",title:"/etc/systemd/system/prometheus.service"},"[Unit]\nDescription=Preometheus\nAfter=network-online.target\n\u200b\n[Service]\nUser=youruser #modify this field with your user\nTimeoutStartSec=0\nCPUWeight=95\nIOWeight=95\nExecStart=/home/youruser/prometheus/prometheus --config.file=/home/youruser/prometheus/prometheus.yml --web.config.file=/home/trinity/prometheus/web.yml --storage.tsdb.path=/home/youruser/prometheus/data\nRestart=always\nRestartSec=2\nLimitNOFILE=800000\nKillSignal=SIGTERM\n\u200b\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Reload the systemd Daemon"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,o.kt)("p",null,"Enable autostart of Node Exporter service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable prometheus.service\n")),(0,o.kt)("h2",{id:"start-node-exporter-service"},"Start Node Exporter service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start prometheus.service\n")),(0,o.kt)("p",null,"Use this command to check logs in real time"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo journalctl -u prometheus.service -f\n")),(0,o.kt)("p",null,"After installing and running Prometheus, you can verify whether metrics are being exported from Node Exporter to Prometheus by using cURL to request the /metrics endpoint on Prometheus port 9090 (you need to insert the password created before)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -u admin http://localhost:9090/metrics\n")),(0,o.kt)("p",null,"If you are running Prometheus on a VPS and want to access the web UI via an external browser, you need to first enable port 9090 on ufw"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw allow 9090/tcp\n")),(0,o.kt)("p",null,"Then you can know type this address on your browser"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"https://prometheus_ip:9090/graph\n")),(0,o.kt)("h3",{id:"node-exporter-on-monitoring-machine"},"Node Exporter on Monitoring machine"),(0,o.kt)("p",null,"You can also consider installing a Node Exporter on your monitoring machine so that you can monitor it too. This way, if something breaks, you can be alerted about it and take appropriate action"))}d.isMDXComponent=!0}}]);