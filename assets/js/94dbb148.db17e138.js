"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[4925],{82788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"essential-tools/restake/overview","title":"Overview","description":"An auto-compounding tool","source":"@site/docs/validator-setup/essential-tools/restake/overview.md","sourceDirName":"essential-tools/restake","slug":"/essential-tools/restake/overview","permalink":"/validator-setup/essential-tools/restake/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Overview","description":"An auto-compounding tool","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"REStake App","permalink":"/validator-setup/category/restake-app"},"next":{"title":"Setup & Configuration","permalink":"/validator-setup/essential-tools/restake/setup-config"}}');var s=n(74848),a=n(28453);const r={title:"Overview",description:"An auto-compounding tool",sidebar_position:1},i="Autorestake Setup",l={},d=[];function c(e){const t={a:"a",h1:"h1",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"autorestake-setup",children:"Autorestake Setup"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://restake.app/sentinel",children:"REStake.app"})," allows delegators to grant permission for a validator to compound their rewards, and provides a script validators can run to find their granted delegators and send the compounding transactions automatically.\nREStake is also a convenient staking tool, allowing you to claim and compound your rewards individually or in bulk. This can save transaction fees and time, and many more features are planned."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(96540);const s={},a=o.createContext(s);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);